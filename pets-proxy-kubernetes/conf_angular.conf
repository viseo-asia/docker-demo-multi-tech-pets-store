server {
    listen 92;
    listen [::]:92;

    root /var/www/html;

    index index.html index.htm index.nginx-debian.html;

    server_name _;

    location ^~ / {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-web-angular.default.svc.cluster.local;
        proxy_pass http://$target$uri$is_args$args;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-cats {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-cats.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-cats/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-dogs {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-dogs.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-dogs/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-rabbits {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-rabbits.default.svc.cluster.local;
        proxy_pass http://$target:5000;
        rewrite ^/api-rabbits/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-hamsters       {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-hamsters.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-hamsters/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-parrots       {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-parrots.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-parrots/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-turtles       {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-turtles.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-turtles/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }

    location ^~ /api-comments       {
        resolver kube-dns.kube-system.svc.cluster.local ipv6=off;
        set $target pets-comments.default.svc.cluster.local;
        proxy_pass http://$target;
        rewrite ^/api-comments/(.*) /$1 break;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
    }
}
